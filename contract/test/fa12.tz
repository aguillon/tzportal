{ parameter
    (or (pair %transfer (address %from) (address %to) (nat %value))
        (or (pair %approve (address %spender) (nat %value))
            (or (pair %getAllowance (address %owner) (address %spender) (contract %callback nat))
                (or (pair %getBalance (address %owner) (contract %callback nat))
                    (contract %getTotalSupply nat))))) ;
  storage
    (pair (big_map %tokens address nat)
          (big_map %allowances (pair address address) nat)
          (nat %total_amount)) ;
  code { UNPAIR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUP 3 ;
             DUP ;
             DUG 2 ;
             CAR ;
             SOURCE ;
             COMPARE ;
             EQ ;
             IF { SWAP ; DROP ; GET 3 }
                { DUP ;
                  GET 3 ;
                  DUP 3 ;
                  CAR ;
                  SOURCE ;
                  PAIR ;
                  GET ;
                  IF_NONE { PUSH nat 0 } {} ;
                  DUP 3 ;
                  GET 4 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  COMPARE ;
                  LT ;
                  IF { PUSH string "Not Enough Allowance" ; FAILWITH } {} ;
                  SWAP ;
                  GET 3 ;
                  DUP 3 ;
                  GET 4 ;
                  DIG 2 ;
                  SUB ;
                  ABS ;
                  SOME ;
                  DIG 2 ;
                  CAR ;
                  SOURCE ;
                  PAIR ;
                  UPDATE } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             DUP 4 ;
             CAR ;
             GET ;
             IF_NONE { PUSH nat 0 } {} ;
             DUP 4 ;
             GET 4 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             LT ;
             IF { PUSH string "Not Enough Balance" ; FAILWITH } {} ;
             DUP 3 ;
             CAR ;
             DUP 5 ;
             GET 4 ;
             DIG 2 ;
             SUB ;
             ABS ;
             SOME ;
             DUP 5 ;
             CAR ;
             UPDATE ;
             DUP 4 ;
             GET 4 ;
             DUP 4 ;
             CAR ;
             DUP 6 ;
             GET 3 ;
             GET ;
             IF_NONE { PUSH nat 0 } {} ;
             ADD ;
             SOME ;
             DIG 4 ;
             GET 3 ;
             UPDATE ;
             DIG 2 ;
             SWAP ;
             UPDATE 1 ;
             SWAP ;
             UPDATE 3 ;
             NIL operation ;
             PAIR }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 GET 3 ;
                 SOURCE ;
                 DUP 4 ;
                 CAR ;
                 PAIR ;
                 GET ;
                 PUSH nat 0 ;
                 DUP 4 ;
                 CDR ;
                 COMPARE ;
                 GT ;
                 PUSH nat 0 ;
                 DIG 2 ;
                 IF_NONE { PUSH nat 0 } {} ;
                 COMPARE ;
                 GT ;
                 AND ;
                 IF { PUSH string "Unsafe Allowance Change" ; FAILWITH } {} ;
                 DUP ;
                 GET 3 ;
                 DUP 3 ;
                 CDR ;
                 SOME ;
                 SOURCE ;
                 DIG 4 ;
                 CAR ;
                 PAIR ;
                 UPDATE ;
                 UPDATE 3 ;
                 NIL operation ;
                 PAIR }
               { IF_LEFT
                   { DUP ;
                     DUG 2 ;
                     GET 4 ;
                     PUSH mutez 0 ;
                     DUP 3 ;
                     GET 3 ;
                     DUP 5 ;
                     GET 3 ;
                     DIG 5 ;
                     CAR ;
                     PAIR ;
                     GET ;
                     IF_NONE { PUSH nat 0 } {} ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { IF_LEFT
                       { DUP ;
                         DUG 2 ;
                         CDR ;
                         PUSH mutez 0 ;
                         DUP 3 ;
                         CAR ;
                         DIG 4 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH nat 0 } {} ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR }
                       { PUSH mutez 0 ;
                         DUP 3 ;
                         GET 4 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } } } } } }

