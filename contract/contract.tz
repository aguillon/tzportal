{ parameter
    (or (or %deposit
           (pair %fA_OP
              (nat %amountToTransfer)
              (address %rollupAddress)
              (or %l2Type
                 (or (unit %l2_CHUSAI) (key_hash %l2_DEKU))
                 (tx_rollup_l2_address %l2_TORU))
              (address %faAddress))
           (pair %xTZ_OP
              (nat %amountToTransfer)
              (address %rollupAddress)
              (or %l2Type
                 (or (unit %l2_CHUSAI) (key_hash %l2_DEKU))
                 (tx_rollup_l2_address %l2_TORU))))
        (or (pair %pendingDeposit
               address
               (pair (nat %amountToTransfer)
                     (address %rollupAddress)
                     (or %l2Type
                        (or (unit %l2_CHUSAI) (key_hash %l2_DEKU))
                        (tx_rollup_l2_address %l2_TORU))
                     (address %faAddress)))
            (or (ticket %withdrawTORU bytes)
                (or (ticket %withdrawDEKU bytes)
                    (pair %withdrawPendingDEKU
                       address
                       (pair (nat %amountToTransfer)
                             (address %rollupAddress)
                             (or %l2Type
                                (or (unit %l2_CHUSAI) (key_hash %l2_DEKU))
                                (tx_rollup_l2_address %l2_TORU))
                             (address %faAddress))))))) ;
  storage
    (pair (pair (map %faPendingDeposits
                   (pair address bytes)
                   (pair (nat %amountToTransfer)
                         (address %rollupAddress)
                         (or %l2Type
                            (or (unit %l2_CHUSAI) (key_hash %l2_DEKU))
                            (tx_rollup_l2_address %l2_TORU))
                         (address %faAddress)))
                (map %faPendingWithdrawals
                   (pair address bytes)
                   (pair (nat %amountToTransfer)
                         (address %rollupAddress)
                         (or %l2Type
                            (or (unit %l2_CHUSAI) (key_hash %l2_DEKU))
                            (tx_rollup_l2_address %l2_TORU))
                         (address %faAddress))))
          (address %treasuryAddress)) ;
  code { LAMBDA
           address
           (contract (pair key_hash (ticket bytes)))
           { CONTRACT %deposit (pair key_hash (ticket bytes)) ;
             IF_NONE { PUSH string "11" ; FAILWITH } {} } ;
         LAMBDA
           address
           (contract (pair (ticket bytes) tx_rollup_l2_address))
           { CONTRACT %deposit (pair (ticket bytes) tx_rollup_l2_address) ;
             IF_NONE { PUSH string "10" ; FAILWITH } {} } ;
         DIG 2 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 PUSH nat 1 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 COMPARE ;
                 LT ;
                 IF { DROP 2 ; PUSH string "0" ; FAILWITH }
                    { DUP ;
                      GET 6 ;
                      RIGHT unit ;
                      PACK ;
                      DUP 3 ;
                      CDR ;
                      DUP 4 ;
                      CAR ;
                      CDR ;
                      DIG 4 ;
                      CAR ;
                      CAR ;
                      DIG 4 ;
                      DIG 4 ;
                      SOURCE ;
                      PAIR ;
                      SWAP ;
                      SOME ;
                      SWAP ;
                      UPDATE ;
                      PAIR ;
                      PAIR ;
                      NIL operation ;
                      PAIR } }
               { PUSH nat 1 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 COMPARE ;
                 LT ;
                 IF { DROP 4 ; PUSH string "0" ; FAILWITH }
                    { PUSH mutez 1 ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CAR ;
                      MUL ;
                      AMOUNT ;
                      COMPARE ;
                      LT ;
                      IF { DROP 4 ; PUSH string "3" ; FAILWITH }
                         { DUP ;
                           CAR ;
                           UNIT ;
                           LEFT address ;
                           PACK ;
                           TICKET ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           GET 4 ;
                           IF_LEFT
                             { DIG 4 ;
                               DROP ;
                               IF_LEFT
                                 { DIG 4 ;
                                   DROP 2 ;
                                   PUSH string "14" ;
                                   DIG 2 ;
                                   GET 3 ;
                                   CONTRACT (ticket bytes) ;
                                   IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                   PUSH mutez 0 ;
                                   DIG 2 ;
                                   TRANSFER_TOKENS }
                                 { DIG 2 ;
                                   GET 3 ;
                                   DIG 4 ;
                                   SWAP ;
                                   EXEC ;
                                   PUSH mutez 0 ;
                                   DIG 3 ;
                                   DIG 3 ;
                                   PAIR ;
                                   TRANSFER_TOKENS } }
                             { DIG 5 ;
                               DROP ;
                               DIG 2 ;
                               GET 3 ;
                               DIG 4 ;
                               SWAP ;
                               EXEC ;
                               PUSH mutez 0 ;
                               DIG 2 ;
                               DIG 3 ;
                               PAIR ;
                               TRANSFER_TOKENS } ;
                           SWAP ;
                           NIL operation ;
                           DIG 2 ;
                           CONS ;
                           PAIR } } } }
           { IF_LEFT
               { SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { DROP 4 ; PUSH string "9" ; FAILWITH }
                    { DUP ;
                      CDR ;
                      GET 6 ;
                      RIGHT unit ;
                      PACK ;
                      DUP 3 ;
                      CAR ;
                      CAR ;
                      NONE (pair nat address (or (or unit key_hash) tx_rollup_l2_address) address) ;
                      DUP 3 ;
                      DIG 4 ;
                      CAR ;
                      PAIR ;
                      GET_AND_UPDATE ;
                      IF_NONE
                        { DROP 5 ; PUSH string "12" ; FAILWITH }
                        { DUP ;
                          GET 5 ;
                          IF_LEFT
                            { DIG 5 ;
                              DROP ;
                              IF_LEFT
                                { DROP 6 ; PUSH string "14" ; FAILWITH }
                                { DUP 5 ;
                                  CDR ;
                                  DIG 5 ;
                                  CAR ;
                                  CDR ;
                                  DIG 4 ;
                                  PAIR ;
                                  PAIR ;
                                  NIL operation ;
                                  DUP 4 ;
                                  GET 3 ;
                                  DIG 6 ;
                                  SWAP ;
                                  EXEC ;
                                  PUSH mutez 0 ;
                                  DIG 5 ;
                                  CAR ;
                                  DIG 6 ;
                                  TICKET ;
                                  DIG 5 ;
                                  PAIR ;
                                  TRANSFER_TOKENS ;
                                  CONS ;
                                  PAIR } }
                            { DIG 6 ;
                              DROP ;
                              DUP 5 ;
                              CDR ;
                              DIG 5 ;
                              CAR ;
                              CDR ;
                              DIG 4 ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              DUP 4 ;
                              GET 3 ;
                              DIG 6 ;
                              SWAP ;
                              EXEC ;
                              PUSH mutez 0 ;
                              DIG 4 ;
                              DIG 5 ;
                              CAR ;
                              DIG 6 ;
                              TICKET ;
                              PAIR ;
                              TRANSFER_TOKENS ;
                              CONS ;
                              PAIR } } } }
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 IF_LEFT
                   { DROP ; NIL operation ; PAIR }
                   { IF_LEFT
                       { READ_TICKET ;
                         SWAP ;
                         DROP ;
                         UNPAIR ;
                         SWAP ;
                         UNPAIR ;
                         SELF_ADDRESS ;
                         DIG 3 ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP 3 ; PUSH string "4" ; FAILWITH }
                            { DUP ;
                              UNPACK (or (unit %xTZ) (address %fA)) ;
                              IF_NONE
                                { DROP 3 ; PUSH string "6" ; FAILWITH }
                                { IF_LEFT
                                    { DROP 2 ;
                                      PUSH string "5" ;
                                      SOURCE ;
                                      CONTRACT unit ;
                                      IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                      DIG 2 ;
                                      NIL operation ;
                                      DIG 2 ;
                                      PUSH mutez 1 ;
                                      DIG 4 ;
                                      MUL ;
                                      UNIT ;
                                      TRANSFER_TOKENS ;
                                      CONS }
                                    { DUP 4 ;
                                      CAR ;
                                      CDR ;
                                      DUP 3 ;
                                      SOURCE ;
                                      PAIR ;
                                      GET ;
                                      IF_NONE
                                        { DUP 4 ;
                                          CDR ;
                                          DUP 5 ;
                                          CAR ;
                                          CDR ;
                                          DIG 2 ;
                                          PUSH key "edpktz4xg6csJnJ5vcmMb2H37sWXyBDcoAp3XrBvjRaTSQ1zmZTeRQ" ;
                                          HASH_KEY ;
                                          RIGHT unit ;
                                          LEFT tx_rollup_l2_address ;
                                          SENDER ;
                                          DIG 6 ;
                                          PAIR 4 ;
                                          DIG 3 ;
                                          SOURCE ;
                                          PAIR ;
                                          SWAP ;
                                          SOME ;
                                          SWAP ;
                                          UPDATE ;
                                          DIG 2 ;
                                          CAR ;
                                          CAR }
                                        { SWAP ;
                                          DROP ;
                                          DUP 4 ;
                                          CDR ;
                                          DUP 5 ;
                                          CAR ;
                                          CDR ;
                                          DIG 2 ;
                                          DUP ;
                                          CAR ;
                                          DIG 5 ;
                                          ADD ;
                                          UPDATE 1 ;
                                          DIG 3 ;
                                          SOURCE ;
                                          PAIR ;
                                          SWAP ;
                                          SOME ;
                                          SWAP ;
                                          UPDATE ;
                                          DIG 2 ;
                                          CAR ;
                                          CAR } ;
                                      PAIR ;
                                      PAIR ;
                                      NIL operation } ;
                                  PAIR } } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         SENDER ;
                         COMPARE ;
                         NEQ ;
                         IF { DROP 2 ; PUSH string "9" ; FAILWITH }
                            { DUP ;
                              CDR ;
                              GET 6 ;
                              RIGHT unit ;
                              PACK ;
                              DUP 3 ;
                              CAR ;
                              CDR ;
                              NONE (pair nat address (or (or unit key_hash) tx_rollup_l2_address) address) ;
                              DIG 2 ;
                              DIG 3 ;
                              CAR ;
                              PAIR ;
                              GET_AND_UPDATE ;
                              DROP ;
                              SWAP ;
                              DUP ;
                              DUG 2 ;
                              CDR ;
                              SWAP ;
                              DIG 2 ;
                              CAR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              NIL operation ;
                              PAIR } } } } } } }

